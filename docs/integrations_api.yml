swagger: '2.0'
info:
  title: Deployments Service Integration API
  version: '0.1'
  description: |
    ### Common information about all exposed API endpoints.

    CORS and none-CORS requests are supported. Details [wikipedia](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing#Simple_example).

    Allows `Location` header exposure.
host: 'localhost:8080'
basePath: '/api/integrations/0.1/deployments'
responses:
  NotFoundError: # 404
    description: Not Found
    schema:
      $ref: "#/definitions/SimpleError"
  InternalServerError: # 500
    description: Internal Server Error
    schema:
      $ref: "#/definitions/SimpleError"
  InvalidRequestError: # 400
    description: Invalid Request
    schema:
      $ref: "#/definitions/SimpleError"

paths:
  /deployments:
    get:
      summary: Find deployments
      description: |
        Lookup deployments in the system, including active and history.
      parameters:
        - name: status
          in: query
          description: Deployment status
          required: false
          type: string
          enum:
            - inprogress
            - finished
            - pending
        - name: search
          in: query
          description: Deployment name or description
          required: false
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              - created: 2016-02-11T13:03:17.063493443Z
                status: finished
                name: production
                artifact_name: Application 0.0.1
                id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
          schema:
            type: array
            items:
              type: object
              properties:
                created:
                  type: string
                  format: date-time
                name:
                  type: string
                artifact_name:
                  type: string
                id:
                  type: string
                finished:
                  type: string
                  format: date-time
                status:
                  type: string
                  enum:
                    - inprogress
                    - pending
                    - finished
              required:
                - created
                - name
                - artifact_name
                - id
                - status
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"

    post:
      summary: Create deployment
      description: |
        Deploy software to specified devices. Image is auto assigned to the
        device from all available images based on artifact name and device type.

        NOTE: Because of lack of inventory system, service assumes hardcoded
        device type for each device: "TestDevice"

      parameters:
        - name: Body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              artifact_name:
                type: string
              devices:
                type: array
                items:
                  type: string
            required:
              - name
              - artifact_name
              - devices
      produces:
        - application/json
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URL of newly created deployment
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"

  '/deployments/{id}':
    get:
      summary: Deployment details
      parameters:
        - name: id
          in: path
          description: Deployment identifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              created: 2016-02-11T13:03:17.063493443Z
              name: production
              artifact_name: Application 0.0.1
              id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
              finished: 2016-03-11T13:03:17.063493443Z
          schema:
            type: object
            properties:
              created:
                type: string
                format: date-time
              name:
                type: string
              artifact_name:
                type: string
              id:
                type: string
              finished:
                type: string
                format: date-time
            required:
              - created
              - name
              - artifact_name
              - id
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

    delete:
      summary: Cancel deployment
      description: |
        Cancels a deployment
        TODO: to be implemented

      parameters:
        - name: id
          in: path
          description: Deployment identifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        204:
          description: Deployment canceled
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  '/deployments/{deployment_id}/statistics':
    get:
      summary: Deployment statistics
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              success: 3
              pending: 1
              failure: 0
              downloading: 1
              installing: 2
              rebooting: 3
              noimage: 0
          schema:
            type: object
            properties:
              success:
                type: integer
                description: Number of successful deployments
              pending:
                type: integer
                description: Number of pending deployments
              downloading:
                type: integer
                description: Number of deployments being downloaded
              rebooting:
                type: integer
                description: Number of deployments devices are rebooting into
              installing:
                type: integer
                description: Number of deployments devices being installed
              failure:
                type: integer
                description: Number of failed deployments
              noimage:
                type: integer
                description: Do not have apropriate image for device type
            required:
              - success
              - pending
              - downloading
              - installing
              - rebooting
              - failure
              - noimage
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  '/deployments/{deployment_id}/devices':
    get:
      summary: List devices of a deployment
      description: |
        List deployment status for each assigned device
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              - id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
                status: pending
                started: 2016-02-11T13:03:17.063493443Z
                device_type: Raspberry Pi 3
                artifact_id: 60a0c91e6-7dec-11d0-a765-f81d4faebf6
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: device ID
                finished:
                  type: string
                  format: date-time
                status:
                  type: string
                  enum:
                    - inprogress
                    - pending
                    - success
                    - failure
                    - noimage
                started:
                  type: string
                  format: date-time
                device_type:
                  type: string
                artifact_id:
                  type: string
              required:
                - id
                - status
                - device_type
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  '/deployments/{deployment_id}/devices/{device_id}/log':
    get:
      summary: Download deployment log
      description: |
        Device log collected during deployment.
      parameters:
        - name: deployment_id
          in: path
          description: Deployment identifier
          required: true
          type: string
        - name: device_id
          in: path
          description: Device identifier
          required: true
          type: string
      produces:
        - application/json
        - text/plain
      responses:
        200:
          description: Device log as text
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  /images:
    get:
      summary: List firmware images
      produces:
        - application/json
      responses:
        200:
          description: OK
          examples:
            application/json:
              - name: MySecretApp v2
                description: Johns Monday test build
                checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                device_type: Beagle Bone
                id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                verified: false
                modified: 2016-03-11T13:03:17.063493443Z
                yocto_id: core-image-full-cmdline-20160330201408
          schema:
            type: object
            items:
              $ref: "#/definitions/Image"

        500:
          $ref: "#/responses/InternalServerError"

    post:
      summary: Create firmware image
      description: |
        Create firmware image. Mulitpart request with meta and image.
      consumes:
        - multipart/mixed
      parameters:
        - name: meta
          in: formData
          required: true
          type: file
        - name: firmware
          in: formData
          required: true
          type: file
      produces:
        - application/json
      responses:
        201:
          description: Image created
          headers:
            Location:
              description: URL of newly created image
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"

  '/images/{id}':
    get:
      summary: Firmare image details
      parameters:
        - name: id
          in: path
          description: Image ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Image"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

    put:
      summary: Update firmware image
      description: |
        Edit image name and description. Image is not allowed to be edited if it was used
        in any deployment.
      parameters:
        - name: id
          in: path
          description: Image ID
          required: true
          type: string
        - name: image
          in: body
          schema:
            $ref: "#/definitions/ImageUpdate"
      produces:
        - application/json
      responses:
        204:
          description: No Content
        400:
          $ref: "#/responses/InvalidRequestError"
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

    delete:
      summary: Remove firmware image
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Image ID
          required: true
          type: string
      responses:
        204:
          description: No Content
        404:
          $ref: "#/responses/NotFoundError"
        500:
          $ref: "#/responses/InternalServerError"

  '/images/{id}/download':
    get:
      summary: Generate download link
      description: |
        Generate signed URL for downloading image file. URI can be used only
        with GET HTTP method. Link supports such HTTP headers: `Range`,
        `If-Modified-Since`, `If-Unmodified-Since` It is valid for specified
        period of time.

        To be able to recieve download link, image file have to be uploaded
        first.
      parameters:
        - name: id
          in: path
          description: Image ID
          required: true
          type: string
        - name: expire
          in: query
          description: |
            Link validity length in minutes. Min 1 minute, max 10080 (1 week)
          required: false
          type: integer
          default: 60
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ImageLink"
        400:
          description: Bad Request
          examples:
            application/json:
              error: Detailed error message
          schema:
            $ref: "#/definitions/SimpleError"
        404:
          description: Not Found
          examples:
            application/json:
              error: Detailed error message
          schema:
            $ref: "#/definitions/SimpleError"
        500:
          description: Internal Server Error
          examples:
            application/json:
              error: Detailed error message
          schema:
            $ref: "#/definitions/SimpleError"

definitions:
  SimpleError:
    description: Simple error descriptor
    type: object
    properties:
      error:
        description: Description of error
        type: string
  ImageBase:
    description: Base firmware image
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      checksum:
        type: string
      device_type:
        type: string
      date_built:
        type: string
      image_size:
        type: integer
    required:
      - name
      - description
      - device_type
      - checksum
  ImageUpdate:
    description: Firmware image information update
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
      - description
  Image:
    description: Detailed firmware image
    allOf:
      - $ref: "#/definitions/ImageBase"
      - type: object
        properties:
          id:
            type: string
          verified:
            type: boolean
          modified:
            type: string
            format: date-time
            description: |
              Represents creation / last edition of any of the image properties
        required:
          - id
          - verified
          - modified
  ImageLink:
    description: URL for firmare image download
    type: object
    properties:
      uri:
        type: string
      expire:
        type: string
        format: date-time
    required:
      - uri
      - expire
