swagger: '2.0'
info:
  title: Deployments Internal API
  version: '1'
  description: |
    Internal API of deployments service

host: 'mender-deployments:8080'
basePath: '/api/internal/v1/deployments'
schemes:
  - http

produces:
  - application/json
consumes:
  - application/json

responses:
  NotFoundError: # 404
    description: Not Found.
    schema:
      $ref: "#/definitions/Error"
  InternalServerError: # 500
    description: Internal Server Error.
    schema:
      $ref: "#/definitions/Error"
  InvalidRequestError: # 400
    description: Invalid Request.
    schema:
      $ref: "#/definitions/Error"
  UnprocessableEntityError: # 422
    description: Unprocessable Entity.
    schema:
      $ref: "#/definitions/Error"

paths:
  /health:
    get:
      operationId: Check Health
      tags:
        - Internal API
      summary: Check the health of the service
      responses:
        204:
          description: >
              Service is healthy and all dependencies are up and running.
        500:
          description: >
              Unexpected internal error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              error: "internal error"
              request_id: "ffd712be-d697-4cb7-814b-88ff1e2eb5f6"
        503:
          description: >
              Service unhealthy / not ready to accept traffic. At least one
              dependency is not running.
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              error: "error reaching MongoDB: context deadline exceeded"
              request_id: "ffd712be-d697-4cb7-814b-88ff1e2eb5f6"

  /alive:
    get:
      operationId: Check Liveliness
      tags:
        - Internal API
      summary: >
          Trivial endpoint that unconditionally returns an empty 200 response
          whenever the API handler is running correctly.
      responses:
        204:
          description: Service is up and running.
        500:
          description: >
              Internal API error
          schema:
            $ref: '#/definitions/Error'
  /tenants/{id}/storage/settings:
    get:
      operationId: Get Storage Settings
      tags:
        - Internal API
      summary: Get storage setting for a given tenant
      description: >
        Returns an object with per tenant storage layer specific settings.
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Successful response with all available settings.
          schema:
            $ref: "#/definitions/StorageSettings"
        500:
          description: Internal error.
          schema:
            $ref: "#/responses/InternalServerError"
    put:
      operationId: Set Storage Settings
      tags:
        - Internal API
      summary: Set storage settings for a given tenant
      description: Set the storage layer settings for a given tenant.
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: settings
          in: body
          description: Settings to set.
          required: true
          schema:
            $ref: "#/definitions/StorageSettings"
      responses:
        204:
          description: Settings updated.
        400:
          description: The request body is malformed.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /tenants/{id}/limits/storage:
    get:
      operationId: Get Storage Usage
      summary: Get storage limit and current storage usage for given tenant
      description: |
        Get storage limit and current storage usage for given tenant.
        If the limit value is 0 it means storage space is unlimited
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/StorageUsage"
        500:
          $ref: "#/responses/InternalServerError"
    put:
      operationId: Set Storage Limit
      summary: Set storage limit for given tenant
      description: |
        Set storage limit for given tenant.
        If the limit value is 0 it means storage space is unlimited
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: limit
          in: body
          required: true
          schema:
            $ref: "#/definitions/StorageLimit"
      responses:
        204:
          description: Limit information updated.
        400:
          description: |
              The request body is malformed.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /tenants:
    post:
      operationId: Create Tenant
      summary: Provision a new tenant
      description: |
          Sets up all tenant-related infrastructure, e.g. a migrated tenant's database.
      parameters:
        - name: tenant
          in: body
          description: New tenant descriptor.
          required: true
          schema:
            $ref: "#/definitions/NewTenant"
      responses:
        201:
          description: Tenant was successfully provisioned.
        400:
          description: Bad request.
        500:
          description: Internal server error.
          schema:
           $ref: "#/definitions/Error"

  /tenants/{id}/deployments:
    get:
      operationId: Get Deployments
      summary: Get all deployments for specific tenant
      description: |
        Returns a filtered collection of deployments in the system,
        including active and historical. If both 'status' and 'query' are
        not specified, all devices are listed.
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: status
          in: query
          description: Deployment status filter.
          required: false
          type: string
          enum:
            - inprogress
            - finished
            - pending
        - name: search
          in: query
          description: Deployment name or description filter.
          required: false
          type: string
        - name: page
          in: query
          description: Results page number
          required: false
          type: number
          format: integer
          default: 1
        - name: created_before
          in: query
          description: List only deployments created before and equal to Unix timestamp (UTC)
          required: false
          type: number
          format: integer
        - name: created_after
          in: query
          description: List only deployments created after and equal to Unix timestamp (UTC)
          required: false
          type: number
          format: integer
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          examples:
            application/json:
              - created: 2016-02-11T13:03:17.063493443Z
                status: finished
                name: production
                artifact_name: Application 0.0.1
                id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
                device_count: 10
          schema:
            type: array
            items:
              $ref: '#/definitions/Deployment'
          headers:
            X-Total-Count:
              type: integer
              description: Total number of deployments matching query.
        400:
          $ref: "#/responses/InvalidRequestError"

  /tenants/{tenant_id}/deployments/devices/{id}:
    delete:
      operationId: Remove Device from Deployments
      tags:
        - Internal API
      summary: Remove device from all deployments
      description: Set 'decommissioned' status to all pending device deployments for a given device
      parameters:
        - name: tenant_id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: id
          in: path
          description: System wide device identifier
          required: true
          type: string
      responses:
        204:
          description: Device was removed
        500:
          description: Internal server error.
          schema:
              $ref: "#/definitions/Error"

  /tenants/{id}/artifacts:
    post:
      operationId: Upload artifact
      summary: Upload mender artifact
      description: |
        Upload mender artifact to a specific tenant. Multipart request with meta and artifact.
        Supports artifact [versions v1, v2, v3](https://docs.mender.io/overview/artifact#versions).
      consumes:
        - multipart/form-data
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID, or "default" if running in non-multitenant setup
          required: true
        - name: artifact_id
          in: formData
          required: false
          description: Artifact ID, optional; the server generates a randome one if not provided.
          type: string
        - name: size
          in: formData
          description: Size of the artifact file in bytes.
          required: false
          type: integer
          format: long
        - name: description
          in: formData
          required: false
          type: string
        - name: artifact
          in: formData
          description: Artifact. It has to be the last part of request.
          required: true
          type: file
      produces:
        - application/json
      responses:
        201:
          description: Artifact uploaded.
          headers:
            Location:
              description: URL of the newly uploaded artifact.
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"
  /tenants/{tenant_id}/configuration/deployments/{deployment_id}/devices/{device_id}:
    post:
      operationId: Create Deployment
      tags:
        - Internal API
      summary: Create a configuration deployment
      description: |
        Deploy configuration to a specified device.
        The artifact will be auto-generated based on the configuration object
        provided with the deployment constructor.
      parameters:
        - name: tenant_id
          in: path
          description: Tenant identifier.
          required: true
          type: string
        - name: device_id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: deployment_id
          in: path
          description: Deployment identifier.
          required: true
          type: string
        - name: deployment
          in: body
          description: New deployment that needs to be created.
          required: true
          schema:
            $ref: "#/definitions/NewConfigurationDeployment"
      produces:
        - application/json
      responses:
        201:
          description: New configuration deployment created.
          headers:
            Location:
              description: URL of the newly created deployment.
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        409:
          description: The deployment with a given id already exists.
          schema:
            $ref: "#/definitions/Error"
        500:
          $ref: "#/responses/InternalServerError"

definitions:
  NewTenant:
    description: New tenant descriptor.
    type: object
    properties:
      tenant_id:
        description: New tenant's ID.
        type: string
    example:
      tenant_id: "58be8208dd77460001fe0d78"

  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "error message"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"
  StorageSettings:
    description: Per tenant storage settings.
    type: object
    properties:
      region:
        type: string
        description: AWS region.
      bucket:
        type: string
        description: Bucket name.
      uri:
        type: string
        description: Endpoint URI.
      external_uri:
        type: string
        description: External Endpoint URI (default: uri).
      key:
        type: string
        description: Access key id (for S3 - AWS_ACCESS_KEY_ID).
      secret:
        type: string
        description: Secret access key (for S3 - AWS_SECRET_ACCESS_KEY).
      token:
        type: string
        description: Token.
      force_path_style:
        type: boolean
        description: Force S3 path-style instead of virtual-hosted style.
      use_accelerate:
        type: boolean
        description: Enable S3 Transfer acceleration.
    required:
      - region
      - bucket
      - key
      - secret
    example:
      region: us-east-1
      bucket: mender-artifacts-unique-bucket-name
      uri: example.internal:9000
      external_uri: example.com
      key: <key>
      secret: <secret>
      token: <token>
      force_path_style: false
      use_accelerate: false
  StorageUsage:
    description: Tenant account storage limit and storage usage.
    type: object
    properties:
      limit:
        type: integer
        description: |
            Storage limit in bytes. If set to 0 - there is no limit for storage.
      usage:
        type: integer
        description: |
            Current storage usage in bytes.
    required:
      - limit
      - usage
    example:
      limit: 1073741824
      usage: 536870912
  StorageLimit:
    description: Tenant account storage limit
    type: object
    properties:
      limit:
        type: integer
        description: |
            Storage limit in bytes. If set to 0 - there is no limit for storage.
    required:
      - limit
    example:
      limit: 1073741824
  Deployment:
    type: object
    properties:
      created:
        type: string
        format: date-time
      name:
        type: string
      artifact_name:
        type: string
      id:
        type: string
      finished:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - inprogress
          - pending
          - finished
      device_count:
        type: integer
      artifacts:
        type: array
        description: An array of artifact's identifiers.
        items:
          type: string
      type:
        type: string
        enum:
          - configuration
          - software
    required:
      - created
      - name
      - artifact_name
      - id
      - status
    example:
      created: 2016-02-11T13:03:17.063493443Z
      status: finished
      name: production
      artifact_name: Application 0.0.1
      id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
      finished: 2016-03-11T13:03:17.063493443Z
  NewConfigurationDeployment:
    type: object
    properties:
      name:
        type: string
        description: Name of the deployment
      configuration:
        type: string
        description: |
            A string containing a configuration object.
            The deployments service will use it to generate configuration
            artifact for the device.
            The artifact will be generated when the device will ask
            for an update.
    required:
      - name
      - configuration
    example:
      name: config-1.1
      configuration: "{\"foo\":\"bar\"}"
