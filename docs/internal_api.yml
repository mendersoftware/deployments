swagger: '2.0'
info:
  title: Deployments Internal API
  version: '1'
  description: |
    Internal API of deployments service

host: 'docker.mender.io'
basePath: '/api/internal/v1/deployments'
schemes:
  - https

responses:
  NotFoundError: # 404
    description: Not Found.
    schema:
      $ref: "#/definitions/Error"
  InternalServerError: # 500
    description: Internal Server Error.
    schema:
      $ref: "#/definitions/Error"
  InvalidRequestError: # 400
    description: Invalid Request.
    schema:
      $ref: "#/definitions/Error"
  UnprocessableEntityError: # 422
    description: Unprocessable Entity.
    schema:
      $ref: "#/definitions/Error"

paths:
  /tenants/{id}/limits/storage:
    get:
      summary: Get storage limit and current storage usage for given tenant
      description: |
        Get storage limit and current storage usage for given tenant.
        If the limit value is 0 it means storage space is unlimited
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/StorageUsage"
        500:
          $ref: "#/responses/InternalServerError"
    put:
      summary: Set storage limit for given tenant
      description: |
        Set storage limit for given tenant.
        If the limit value is 0 it means storage space is unlimited
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: limit
          in: body
          required: true
          schema:
            $ref: "#/definitions/StorageLimit"
      responses:
        204:
          description: Limit information updated.
        400:
          description: |
              The request body is malformed.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /tenants:
    post:
      summary: Provision a new tenant
      description: |
          Sets up all tenant-related infrastructure, e.g. a migrated tenant's database.
      parameters:
        - name: tenant
          in: body
          description: New tenant descriptor.
          required: true
          schema:
            $ref: "#/definitions/NewTenant"
      responses:
        201:
          description: Tenant was successfully provisioned.
        400:
          description: Bad request.
        500:
          description: Internal server error.
          schema:
           $ref: "#/definitions/Error"
  /tenants/{id}/deployments:
    get:
      summary: Get all deployments for specific tenant
      description: |
        Returns a filtered collection of deployments in the system,
        including active and historical. If both 'status' and 'query' are
        not specified, all devices are listed.
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: status
          in: query
          description: Deployment status filter.
          required: false
          type: string
          enum:
            - inprogress
            - finished
            - pending
        - name: search
          in: query
          description: Deployment name or description filter.
          required: false
          type: string
        - name: page
          in: query
          description: Results page number
          required: false
          type: number
          format: integer
          default: 1
        - name: created_before
          in: query
          description: List only deployments created before and equal to Unix timestamp (UTC)
          required: false
          type: number
          format: integer
        - name: created_after
          in: query
          description: List only deployments created after and equal to Unix timestamp (UTC)
          required: false
          type: number
          format: integer
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          examples:
            - created: 2016-02-11T13:03:17.063493443Z
              status: finished
              name: production
              artifact_name: Application 0.0.1
              id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
              finished: 2016-03-11T13:03:17.063493443Z
              device_count: 10
          schema:
            type: array
            items:
              $ref: '#/definitions/Deployment'
        400:
          $ref: "#/responses/InvalidRequestError"

  /tenants/{id}/artifacts:
    post:
      summary: Upload mender artifact
      description: |
        Upload mender artifact to a specific tenant. Multipart request with meta and artifact.
        Supports artifact (versions v1, v2)[https://docs.mender.io/development/architecture/mender-artifacts#versions].
      consumes:
        - multipart/form-data
      parameters:
        - name: id
          in: path
          type: string
          description: Tenant ID
          required: true
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: size
          in: formData
          description: Size of the artifact file in bytes.
          required: true
          type: integer
          format: long
        - name: description
          in: formData
          required: false
          type: string
        - name: artifact
          in: formData
          description: Artifact. It has to be the last part of request.
          required: true
          type: file
      produces:
        - application/json
      responses:
        201:
          description: Artifact uploaded.
          headers:
            Location:
              description: URL of the newly uploaded artifact.
              type: string
        400:
          $ref: "#/responses/InvalidRequestError"
        500:
          $ref: "#/responses/InternalServerError"
definitions:
  NewTenant:
    description: New tenant descriptor.
    type: object
    properties:
      tenant_id:
        description: New tenant's ID.
        type: string
    example:
      tenant_id: "58be8208dd77460001fe0d78"

  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "failed to decode device group data: JSON payload is empty"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"
  StorageUsage:
    description: Tenant account storage limit and storage usage.
    type: object
    properties:
      limit:
        type: integer
        description: |
            Storage limit in bytes. If set to 0 - there is no limit for storage.
      usage:
        type: integer
        description: |
            Current storage usage in bytes.
    required:
      - limit
      - usage
    example:
      limit: 1073741824
      usage: 536870912
  StorageLimit:
    description: Tenant account storage limit
    type: object
    properties:
      limit:
        type: integer
        description: |
            Storage limit in bytes. If set to 0 - there is no limit for storage.
    required:
      - limit
    example:
      limit: 1073741824
  Deployment:
    type: object
    properties:
      created:
        type: string
        format: date-time
      name:
        type: string
      artifact_name:
        type: string
      id:
        type: string
      finished:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - inprogress
          - pending
          - finished
      device_count:
        type: integer
      artifacts:
        type: array
        items:
          type: string
          description: An array of artifact's identifiers.
    required:
      - created
      - name
      - artifact_name
      - id
      - status
    example:
      created: 2016-02-11T13:03:17.063493443Z
      status: finished
      name: production
      artifact_name: Application 0.0.1
      id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
      finished: 2016-03-11T13:03:17.063493443Z
